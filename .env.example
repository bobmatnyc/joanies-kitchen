# =============================================================================
# ENVIRONMENT VARIABLES CONFIGURATION
# =============================================================================
# Copy this file to .env.local and fill in your actual values
# NEVER commit .env.local to git - it contains sensitive information

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Base URL for your application
# Development: http://localhost:3004 (or your custom port)
# Production: https://your-domain.com
NEXT_PUBLIC_APP_URL=http://localhost:3004

# Node.js environment
# Values: development, production, test
NODE_ENV=development

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL connection string (required)
# For Neon DB: postgresql://user:password@host:port/database?sslmode=require
# For local PostgreSQL: postgresql://user:password@localhost:5432/database
DATABASE_URL=postgresql://user:password@host:port/database?sslmode=require

# Unpooled database URL (optional - used for migrations and direct connections)
# Only needed if using connection pooling services like Neon
DATABASE_URL_UNPOOLED=postgresql://user:password@host:port/database?sslmode=require

# =============================================================================
# AUTHENTICATION (CLERK) - DUAL ENVIRONMENT SETUP
# =============================================================================
# Get your keys from https://dashboard.clerk.com/
# Required for user authentication features

# DEVELOPMENT KEYS (for localhost:3004)
# Use test keys for development - safe for localhost testing
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY_DEV=pk_test_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
CLERK_SECRET_KEY_DEV=sk_test_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# PRODUCTION KEYS (for recipes.help)
# Use live keys for production - restricted to your domain
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY_PROD=pk_live_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
CLERK_SECRET_KEY_PROD=sk_live_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# AUTOMATIC KEY SELECTION (Recommended)
# These will be auto-selected based on environment:
# - Development: Uses _DEV keys or fallback to these if they start with pk_test_/sk_test_
# - Production: Uses _PROD keys or fallback to these if they start with pk_live_/sk_live_
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
CLERK_SECRET_KEY=sk_test_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# Enable authentication in development (when Clerk keys are configured)
# Set to true to test authentication on localhost
# Authentication is always enabled in production when Clerk is configured
ENABLE_DEV_AUTH=false

# Allow live keys in development (not recommended for security)
# ALLOW_LIVE_KEYS_IN_DEV=false

# Clerk redirect URLs (optional - customize authentication flow)
NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/

# =============================================================================
# AI FEATURES (OPENROUTER)
# =============================================================================
# OpenRouter API key for AI-powered recipe features
# Get your API key from https://openrouter.ai/
# Required for: recipe generation, search suggestions, ingredient substitutions
OPENROUTER_API_KEY=sk-or-v1-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# =============================================================================
# VERCEL DEPLOYMENT (AUTO-GENERATED)
# =============================================================================
# The following variables are automatically set by Vercel
# DO NOT manually set these in production - Vercel manages them

# Vercel deployment URL (auto-generated)
# VERCEL_URL=your-app-vercel.app

# Vercel environment (auto-generated)
# VERCEL_ENV=production

# Vercel project ID (auto-generated)
# VERCEL_PROJECT_ID=prj_xxxxxxxxxxxxxxxxxxxx

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
#
# 1. REQUIRED SETUP:
#    - Set DATABASE_URL (PostgreSQL connection string)
#    - Set OPENROUTER_API_KEY (for AI features)
#    - Set NEXT_PUBLIC_APP_URL (your app's URL)
#
# 2. OPTIONAL AUTHENTICATION:
#    - Set NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY and CLERK_SECRET_KEY
#    - Authentication can be disabled - app works without it
#    - When disabled, all recipes are public and editable
#
# 3. GOOGLE ONE TOUCH SIGNIN (if using Clerk):
#    - Go to Clerk Dashboard -> Configure -> SSO Connections
#    - Enable Google OAuth
#    - Add Google Client ID and Secret from Google Cloud Console
#    - Configure authorized redirect URIs:
#      https://YOUR_CLERK_FRONTEND_API/.clerk/oauth_callback
#
# 4. DATABASE SETUP:
#    - Run: npm run db:generate (generate migrations)
#    - Run: npm run db:migrate (apply migrations)
#    - Run: npm run db:seed:system (populate with example recipes)
#
# =============================================================================